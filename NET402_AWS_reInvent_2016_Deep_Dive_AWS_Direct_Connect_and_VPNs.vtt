WEBVTT FILE

1
00:00:00.000 --> 00:00:07.000
so good afternoon and welcome to this
session first of all let's check rule in
the right room I think I'm in the right

2
00:00:07.000 --> 00:00:16.000
room but this is a deep dive session
this is net 402 we're going to be
talking about direct connect and VPNs my

3
00:00:16.000 --> 00:00:22.000
name is Steve see more I'm a specialist
solutions architect for networking i
work in Europe Middle Eastern Africa

4
00:00:22.000 --> 00:00:29.000
with all of our customers that want to
have deep dive discussions on networking
as I say this is a 400 level session

5
00:00:29.000 --> 00:00:36.000
which means it's an expert level session
we expect you to be deeply familiar with
this topic already and actually quite

6
00:00:36.000 --> 00:00:42.000
comfortable with how it already works
this is not an introduction level
session so perhaps some existing

7
00:00:42.000 --> 00:00:47.000
knowledge you might have perhaps earlier
in the week you might have gone to Becky
session at 201 where she talked about

8
00:00:47.000 --> 00:00:54.000
some of the connectivity options that we
have and she mentioned direct connect
and VPN in that session you might also

9
00:00:54.000 --> 00:01:00.000
have seen yesterday's session with Ben
and Sid they talked about how to extend
data centers into the cloud and again

10
00:01:00.000 --> 00:01:08.000
they were explaining how you use VPN and
direct connect to achieve that you also
might have seen the session that I did

11
00:01:08.000 --> 00:01:13.000
last year it was the same titled session
but it was net 406 last year and in that
session I actually go through step by

12
00:01:13.000 --> 00:01:19.000
step how to configure everything to do
with these two services so I'm not going
to be repeating that this year but all

13
00:01:19.000 --> 00:01:25.000
of that content can be found on youtube
so you can look at it after this event
if you need to go back and refresh some

14
00:01:25.000 --> 00:01:32.000
of that knowledge now one of the cool
things that I do expect from this
session and hopefully all of you know

15
00:01:32.000 --> 00:01:40.000
this is the difference between a VPN and
direct connect that's really important
knowledge but I also expect you to know

16
00:01:40.000 --> 00:01:46.000
the difference between a Rooter and a
router
anyway let's get started with the rest

17
00:01:46.000 --> 00:01:50.000
of the session so what are we actually
going to be covering well obviously
we're talking about VPN and direct

18
00:01:50.000 --> 00:01:55.000
connect throughout the whole session but
I wanted to look at some of the options
and the configuration details around

19
00:01:55.000 --> 00:01:59.000
those we're going to talk about
resilience how you can achieve a
resilient set up with both of these

20
00:01:59.000 --> 00:02:04.000
services and talk about some of the
frequently asked questions that we get
as a solutions architecture team about

21
00:02:04.000 --> 00:02:10.000
the two services and touch on billing a
little bit as well just to explain how
some of that works we're then going to

22
00:02:10.000 --> 00:02:16.000
go a bit deeper on BGP and how does
rooting actually work talking about
autonomous system numbers how routing

23
00:02:16.000 --> 00:02:23.000
works within the virtual private gateway
beyond that and then gonna dive into
some details around cloud hub and

24
00:02:23.000 --> 00:02:31.000
transit VPC solutions how you can
connect direct connect and VPN to other
AWS services and then finally a full

25
00:02:31.000 --> 00:02:37.000
example of how you can configure an
ipsec VPN over the top of direct connect
so that's the level of depth we're

26
00:02:37.000 --> 00:02:44.000
talking about in this session okay so
let's start with the hardware VPN
solution that we have now the hardware

27
00:02:44.000 --> 00:02:51.000
VPN solution is a fully managed VPN
solution provided by AWS it has an end
point on the AWS side which is the

28
00:02:51.000 --> 00:02:56.000
virtual private gateway and it has an
end point on the customer side of the
connection that we refer to as the

29
00:02:56.000 --> 00:03:03.000
customer gateway when you create a VPN
connection using this solution we
actually provision two tunnels and those

30
00:03:03.000 --> 00:03:08.000
two tunnels give you your resilience
into the AWS environment each of those
tunnel endpoints terminates in a

31
00:03:08.000 --> 00:03:14.000
different availability zone it's a
standard ipsec tunnel so there's nothing
unusual about this its sports standard

32
00:03:14.000 --> 00:03:21.000
encryption options sports aes-256 she'll
too and also we do now support NAT
traversal as well so if the customer

33
00:03:21.000 --> 00:03:26.000
gateway on your side of this connection
is actually already behind another
router that is doing some address

34
00:03:26.000 --> 00:03:33.000
translation that's fine that'll work as
well the VPN connection is paid for on
an hourly basis for each VPN connection

35
00:03:33.000 --> 00:03:40.000
that you have and that covers the two
tunnels associated with that particular
VPN connection and then finally there

36
00:03:40.000 --> 00:03:47.000
are two options for configuring this VPN
it can either be a static VPN or it can
be dynamic or BGP based in terms of the

37
00:03:47.000 --> 00:03:53.000
routing so let's just quickly refresh
ourselves on what those two terms mean
both static and dynamic so here's an

38
00:03:53.000 --> 00:03:57.000
example of the static VPN in this
situation you actually have to configure
specifically

39
00:03:57.000 --> 00:04:04.000
the IP addresses that you're going to be
on each end of the VPN tunnels might be
also known as a policy-based VPN so

40
00:04:04.000 --> 00:04:08.000
you're going to define that on the right
hand side here you've got your corporate
infrastructure your data center and

41
00:04:08.000 --> 00:04:15.000
perhaps it's 192 168 / 16 on the
left-hand side we have our VPC and are
two end points for the virtual private

42
00:04:15.000 --> 00:04:22.000
gateway and the VPC in this case is 10 /
16 now you'll notice here that you can
only have one unique security

43
00:04:22.000 --> 00:04:29.000
Association pair per tunnel so that's
fine in this setup that we're showing
here there is only one set of IP

44
00:04:29.000 --> 00:04:34.000
addresses on each end of the connection
that we need to be able to route to so
that's two unique pairs 42 tunnels

45
00:04:34.000 --> 00:04:41.000
that's for security associations but I'm
guessing there were a lot of your
networks don't simply have one such 16

46
00:04:41.000 --> 00:04:45.000
as part of them so on the right hand
side of the diagram and in that case
what you actually need to do is

47
00:04:45.000 --> 00:04:52.000
configure the policy based VPN to be
using 0 / 0 what that means is any
traffic can flow over this VPN

48
00:04:52.000 --> 00:04:58.000
connection you then need to use network
acl's on your end of the connection on
your reuters to actually control and

49
00:04:58.000 --> 00:05:03.000
manage that traffic because we need to
go back to the fact that we support
these four security associations across

50
00:05:03.000 --> 00:05:12.000
the two tunnels now what about a dynamic
VPN dynamic VP again again has the two
end points on the AWS side but this time

51
00:05:12.000 --> 00:05:18.000
instead of specifying which IP addresses
are reachable on each end of the
connection we use BGP routing protocol

52
00:05:18.000 --> 00:05:25.000
to announce those routes between each
end between each location so in this
case we're going to have the two tunnels

53
00:05:25.000 --> 00:05:31.000
there's an IP address associated with
each end of that tunnel and then a BG
pas number defining both the customer

54
00:05:31.000 --> 00:05:39.000
end of the connection and the AWS end
the a s number that's used on the Amazon
side is fixed for each region but on the

55
00:05:39.000 --> 00:05:43.000
customer side obviously you can use
whatever a s number you like we'd
recommend you use a private is number

56
00:05:43.000 --> 00:05:51.000
and if you use a public is number you
should own it but this is a private
environment of VPN connection now if you

57
00:05:51.000 --> 00:05:56.000
wanted to achieve a resilience set up
with either the static or the dynamic
VPNs you could obviously deploy to

58
00:05:56.000 --> 00:06:02.000
customer gateways within your
environment within your data center on
the right you can then build to VPN

59
00:06:02.000 --> 00:06:08.000
tunnels from each of those customer
gateways to each VPC that you want to
connect to so in this case I'm showing 2

60
00:06:08.000 --> 00:06:13.000
V PCs and you can then expand this as
you needed to build
the VPN connections out to all of your V

61
00:06:13.000 --> 00:06:21.000
pcs so let's take a look at a couple of
the frequently asked questions that I
get now quite a common one is how can i

62
00:06:21.000 --> 00:06:26.000
change the pre-shared key on a VPN
connection now you might have seen this
if you have some experience with our VPN

63
00:06:26.000 --> 00:06:31.000
solution already when you create the VPN
configuration we give you a file to
download which contains all the

64
00:06:31.000 --> 00:06:36.000
configuration options it's also a
template for a lot of well-known Rooter
manufacturers you can just generally

65
00:06:36.000 --> 00:06:43.000
apply the pre-shared key is within that
file so if you want to change that
pre-shared key what you actually have to

66
00:06:43.000 --> 00:06:49.000
do is create a new VPN connection that
will generate a new pre-shared key and
you can then reconfigure it on your end

67
00:06:49.000 --> 00:06:55.000
of the connection but when you do that
you also need to be aware that when you
recreate that VPN we are likely to also

68
00:06:55.000 --> 00:07:00.000
change the end points on the AWS side of
that connection so the IP addresses
you're establishing your tunnels to will

69
00:07:00.000 --> 00:07:06.000
probably have changed in that scenario
so in that case make sure you do we can
figure all of those options on your

70
00:07:06.000 --> 00:07:12.000
route oh now we support the whole range
of crypto options on the VPN solution
that we have here so what if you want to

71
00:07:12.000 --> 00:07:17.000
change those after you've already
deployed the VPN well this is really
easy you simply change it on your end

72
00:07:17.000 --> 00:07:23.000
because the way an ipsec VPN works is
there is a negotiation at the beginning
of the VPN connection where you make

73
00:07:23.000 --> 00:07:30.000
proposals to each other of which
encryption options do I want to use and
if you only propose a higher level of

74
00:07:30.000 --> 00:07:36.000
encryption that's fine that's what will
accept an will establish that VPN
connection now what if you built your

75
00:07:36.000 --> 00:07:42.000
VPC you've done some testing in it and
now you want to build another VPC
perhaps for production and move your VPN

76
00:07:42.000 --> 00:07:49.000
to that production VPC you want to reuse
that existing VPN connection this is
actually really quite easy because the

77
00:07:49.000 --> 00:07:54.000
VPN connection is associated with the
Virtual Private gateway it's not
associated with your VPC so what that

78
00:07:54.000 --> 00:08:02.000
means is you can now detach that virtual
private gateway and then reattach it to
the other VPC so very easy to move that

79
00:08:02.000 --> 00:08:10.000
virtual private gateway so how does
billing work on VPN connections well as
I mentioned earlier you pay for the

80
00:08:10.000 --> 00:08:16.000
connection hours of your VPN connection
so once that VPN is configured you're
then going to receive an hourly charge

81
00:08:16.000 --> 00:08:22.000
for it the other dimension that we have
is that you pay for data transfer over
that VPN connection now here's a little

82
00:08:22.000 --> 00:08:26.000
bit more detail that I didn't have in my
session last year
I want to just give you that that kind

83
00:08:26.000 --> 00:08:31.000
of slightly deeper view the first item I
have here is where is the customer
gateway well if it's over the internet

84
00:08:31.000 --> 00:08:37.000
somewhere if it's in your data center
then you're transferring this data over
the Internet so the data transfer charge

85
00:08:37.000 --> 00:08:42.000
is our standard internet out data
transfer charge and obviously we don't
charge anything for the data flowing

86
00:08:42.000 --> 00:08:50.000
into AWS but what if you're using your
customer gateway via a direct connect
circuit which is the example I'm going

87
00:08:50.000 --> 00:08:55.000
to be talking about later on how do we
charge the data transfer in that
situation well it's charged at the rate

88
00:08:55.000 --> 00:09:02.000
for direct connect it's not charged at
the normal internet data transfer rate
there's also a scenario where you might

89
00:09:02.000 --> 00:09:08.000
have deployed your customer gateway a
choose a virtual machine in another VPC
and if that VPC is in the same region

90
00:09:08.000 --> 00:09:13.000
and you're reaching it via its elastic
IP address then actually going to pay
the data transfer charge for regional

91
00:09:13.000 --> 00:09:18.000
data transfer it makes sense the IP
address is within the region so we're
not going to charge you for internet

92
00:09:18.000 --> 00:09:24.000
data transfer out we charge you for
regional data transfer and then finally
again you could have deployed your

93
00:09:24.000 --> 00:09:30.000
customer gateway as a software solution
in a VPC and another AWS region and
again in that case the building will be

94
00:09:30.000 --> 00:09:39.000
based on data transfer to a remote AWS
region so it's a couple of other
dimensions there to the building so now

95
00:09:39.000 --> 00:09:45.000
it's also just touch on what is direct
connect well direct connect is a
dedicated private connection into AWS

96
00:09:45.000 --> 00:09:52.000
you can create private or public virtual
interfaces that give you access to
either your v pc or other AWS services

97
00:09:52.000 --> 00:09:59.000
that have public IP addresses it enables
you to benefit from reduced data
transfer rates data transfer in still

98
00:09:59.000 --> 00:10:05.000
remains free obviously but age transfer
out is at a lesser rate than internet
data transfer it gives you this

99
00:10:05.000 --> 00:10:12.000
consistent network performance you can
obviously configure the environment for
redundant connections although you might

100
00:10:12.000 --> 00:10:17.000
only provision one direct connect
connection or multiple you can actually
share these across all of your AWS

101
00:10:17.000 --> 00:10:22.000
accounts and it's a very common setup we
now see with customers where they have
multiple accounts so you can actually

102
00:10:22.000 --> 00:10:29.000
share these direct connect connections
between them all and then finally Direct
Connect uses BGP for exchanging routing

103
00:10:29.000 --> 00:10:36.000
information so there is no static option
on Direct Connect so a bit of
terminology about the connections these

104
00:10:36.000 --> 00:10:40.000
are probably terms you're fairly
familiar with you know dark
fiber Ethernet private line pseudowire

105
00:10:40.000 --> 00:10:47.000
these kind of things basically these are
all layer one layer to type services
effectively an Ethernet connection so

106
00:10:47.000 --> 00:10:52.000
when you connect into an AWS direct
connect Rooter at one of our locations
it's probably going to be using one of

107
00:10:52.000 --> 00:10:58.000
these mechanisms if you happen to be in
one of our direct connect locations and
you have your equipment in a rack of one

108
00:10:58.000 --> 00:11:04.000
of those this might be as simple as
ordering a cross connect so you order
that from the data center provider the

109
00:11:04.000 --> 00:11:11.000
cross-connect might go under the floor
straight into the AWS Reuters we use
single mode fiber connections either

110
00:11:11.000 --> 00:11:16.000
thousand base LX for long gig
connections or 10g base lr4 10 geek
connections and they're the two port

111
00:11:16.000 --> 00:11:23.000
speed options that we have one gig or 10
gig and that's a dedicated port for you
if you're not though within those direct

112
00:11:23.000 --> 00:11:28.000
connect locations within those Colo
facilities you might be using a direct
connect partner to get this connection

113
00:11:28.000 --> 00:11:38.000
to you but there will always be a Rooter
on the other end of that connection that
needs to talk bgp over a VLAN so i said

114
00:11:38.000 --> 00:11:43.000
there that this is a dedicated
connection a one gig or a 10 gig port
well what if you actually want a lesser

115
00:11:43.000 --> 00:11:50.000
amount of bandwidth so I just wanted to
clarify here the terms that we use so a
one gig or a 10 gig port is fairly clear

116
00:11:50.000 --> 00:11:56.000
it's a port on the router that now is
assigned to you and you connect into it
you get the full port speed available

117
00:11:56.000 --> 00:12:02.000
for your use and you can configure as
many virtual interfaces public or
private on that connection that you need

118
00:12:02.000 --> 00:12:09.000
with a hosted connection though this is
provided by some of our partners it
enables you to get sub 1 gig connections

119
00:12:09.000 --> 00:12:15.000
so 50 meg through to 500 megabits per
second it's actually provided on an
existing connection we have with that

120
00:12:15.000 --> 00:12:22.000
partner we pull that interconnect and
when they create a connection for you it
becomes a hosted connection that hosted

121
00:12:22.000 --> 00:12:30.000
connection defines a bandwidth the 50
meg through to 500 meg and a VLAN
because it's already defined the VLAN

122
00:12:30.000 --> 00:12:35.000
when you create a virtual interface on
that hosted connection you can only
create a single one of them I'm going to

123
00:12:35.000 --> 00:12:41.000
look at that in a bit more detail in a
moment now I mentioned the term virtual
interface a couple of times and public

124
00:12:41.000 --> 00:12:47.000
and private virtual interface now
virtual interface is quite often known
by the term diff I realize that's used

125
00:12:47.000 --> 00:12:51.000
in the industry generally for quite a
few things but this is a public and a
private vith we're talking about here

126
00:12:51.000 --> 00:12:59.000
a private wif connects you to your
virtual private cloud your VPC board it
doesn't give you access to in your v pc

127
00:12:59.000 --> 00:13:06.000
is the DNS resolver that we provide it's
referred to as the the plus 2 dns
resolver it's on the base IP address of

128
00:13:06.000 --> 00:13:15.000
your v pc plus 2 you can't reach that
over a private fifth equally you might
have a VPC endpoint for s3 on your v pc

129
00:13:15.000 --> 00:13:22.000
you can't reach that over a private
virtual interface either but otherwise
ec2 instances that are deployed within

130
00:13:22.000 --> 00:13:28.000
your v pc you can reach those over a
private virtual interface so what about
a public virtual interface well again

131
00:13:28.000 --> 00:13:34.000
the clues in the name it gives you
access to public AWS services these are
services that are exposed on the

132
00:13:34.000 --> 00:13:38.000
internet and that you can reach normally
over an internet connection but in the
case that you want to use direct connect

133
00:13:38.000 --> 00:13:45.000
to reach those you create a public
virtual interface it gives you access to
any of our public IP addresses in The

134
00:13:45.000 --> 00:13:51.000
Associated AWS region and it also gives
you access to anything else that is
running on AWS IP addresses within that

135
00:13:51.000 --> 00:13:59.000
region the other thing that's included
within those public IP addresses are the
VPN end points for the managed VPN that

136
00:13:59.000 --> 00:14:04.000
I mentioned a moment ago and at the end
of this session that's the example i'm
going to show you of how to configure an

137
00:14:04.000 --> 00:14:12.000
ipsec VPN over a public virtual
interface so a little bit more about
virtual interfaces what would you

138
00:14:12.000 --> 00:14:18.000
actually need to configure is very
simple you've got three choices first of
all is it public or private I need to

139
00:14:18.000 --> 00:14:24.000
choose a VLAN for this particular
virtual interface and when I've done
that I need to configure some bgp

140
00:14:24.000 --> 00:14:31.000
options so these are the three core
components of a virtual interface now
let's take a look at how we pull these

141
00:14:31.000 --> 00:14:39.000
together so we have your account here
and within it you've created a one gig
or a 10 gig direct connect connection on

142
00:14:39.000 --> 00:14:44.000
that connection you're then going to go
and create a virtual interface and when
you do that it will be assigned an

143
00:14:44.000 --> 00:14:50.000
identifier DX 5th DX is the abbreviation
we use for direct connect and you would
have chosen a VLAN for this particular

144
00:14:50.000 --> 00:14:56.000
virtual interface you can create
multiples of those so if you have
another VPC that you want to reach over

145
00:14:56.000 --> 00:15:02.000
this direct connect you simply create a
second virtual interface and a third and
as many more as you need on that regular

146
00:15:02.000 --> 00:15:10.000
connection that one gig or that 10 gig
port initially you can also share these
across accounts so how does that work

147
00:15:10.000 --> 00:15:16.000
well if you've got multiple AWS accounts
you go into the account that has the
connection you create a virtual

148
00:15:16.000 --> 00:15:22.000
interface as normal but there's an
option to enter another AWS account
number when you do that you finish

149
00:15:22.000 --> 00:15:27.000
configuring the VLAN and the BGP options
put in the account number and when you
submit that it will appear in the other

150
00:15:27.000 --> 00:15:34.000
AWS account ready to be accepted and at
this point it becomes what we call a
hosted virtual interface because it is

151
00:15:34.000 --> 00:15:39.000
hosted on the connection in another
account and you can repeat this so you
can create as many of those as you need

152
00:15:39.000 --> 00:15:47.000
as well on a regular connection what
about the situation where we have a
partner providing the sub 1 gig options

153
00:15:47.000 --> 00:15:53.000
250 through 500 Meg options well I
mentioned earlier that the partner will
already have an interconnect with us so

154
00:15:53.000 --> 00:15:59.000
that's already in place you don't need
to order any physical components on the
AWS side you still might need a

155
00:15:59.000 --> 00:16:03.000
connection from that partner to your
infrastructure but you don't have to
create the connection in the AWS console

156
00:16:03.000 --> 00:16:10.000
where you actually do instead is give
your AWS account number to the direct
connect partner they will then provision

157
00:16:10.000 --> 00:16:17.000
a hosted connection for you on their
interconnect and it will appear in your
account to accept it will show up with a

158
00:16:17.000 --> 00:16:22.000
particular VLAN already assigned to it
and a defined bandwidth but you still
need to then create the virtual

159
00:16:22.000 --> 00:16:28.000
interface on that hosted connection the
only difference here will be that the
VLAN has already been set and you'll see

160
00:16:28.000 --> 00:16:33.000
that it's exactly the same screen that
you've already been looking at to create
a virtual interface on a regular

161
00:16:33.000 --> 00:16:38.000
connection but the VLAN field would just
be grayed out because it's already been
chosen by the direct connect partner but

162
00:16:38.000 --> 00:16:44.000
I said that a virtual interface requires
a choice of public and private a VLAN
and a BGP session well one of those

163
00:16:44.000 --> 00:16:49.000
decision has already been made for you
so if you want another virtual interface
whether you're going to use it in the

164
00:16:49.000 --> 00:16:55.000
same account or another one you actually
need to go back to the partner and ask
them to provide you with another hosted

165
00:16:55.000 --> 00:17:01.000
connection so in this case I'm showing
as VLAN 10 2 and at that stage you can
then create another virtual interface on

166
00:17:01.000 --> 00:17:09.000
that hosted connection so how do we deal
with resilience with direct connect so
I'm showing here to direct connect

167
00:17:09.000 --> 00:17:16.000
locations now we have multiple locations
for most of the AWS regions and this
means that you can deploy very resilient

168
00:17:16.000 --> 00:17:21.000
connectivity solutions to the
right of this diagram facing your
network in each of those direct connect

169
00:17:21.000 --> 00:17:26.000
locations we have at least two direct
connect Reuters so even within a single
facility you can have redundant

170
00:17:26.000 --> 00:17:34.000
connectivity these two direct connect
locations though need to be connected
back to an AWS region so here we have an

171
00:17:34.000 --> 00:17:40.000
example of an AWS region with multiple
availability zones and the two transit
centers associated with that each direct

172
00:17:40.000 --> 00:17:47.000
connect location then has diverse and
resilient connectivity back to that
region so you can now build a very

173
00:17:47.000 --> 00:17:56.000
resilient very highly available solution
using direct connect so a couple of FA
cues on direct connect what if you want

174
00:17:56.000 --> 00:18:00.000
to move that connection that you're
ordered in one account to another
account well the first thing is don't

175
00:18:00.000 --> 00:18:06.000
delete it because if you do what's going
to happen is you'll have to start the
process of ordering that connection

176
00:18:06.000 --> 00:18:12.000
again and we're going to then send you a
new Loa letter of authorization
connecting facility agreement that

177
00:18:12.000 --> 00:18:17.000
defines where that port actually is and
it will be a different port to the one
you had previously so now you're going

178
00:18:17.000 --> 00:18:22.000
to have to move your cross connect etc
so don't delete the port if you want to
do this all you need to do is raise a

179
00:18:22.000 --> 00:18:28.000
support case we will happily move that
assuming you're on both accounts
obviously and we'll move that between

180
00:18:28.000 --> 00:18:35.000
the accounts or rename it based on your
request so simply don't delete it you've
created a virtual interface it's

181
00:18:35.000 --> 00:18:40.000
attached to a virtual private gateway
that's how we connect into our VP see
what if we actually want to move it to

182
00:18:40.000 --> 00:18:45.000
another virtual private gateway well in
this case what you need to do is
actually note down the settings that you

183
00:18:45.000 --> 00:18:52.000
use so the BGP options the VLAN etc you
can then delete and recreate that
virtual interface using the same

184
00:18:52.000 --> 00:19:01.000
settings if you need to delete a virtual
private gateway you will need to remove
all of the virtual interfaces first if

185
00:19:01.000 --> 00:19:06.000
you're doing a public virtual interface
you need to reach the public side of the
AWS network you're going to need to be

186
00:19:06.000 --> 00:19:11.000
using public IP addresses on that
connection what if you don't have any
that you are willing to use on this

187
00:19:11.000 --> 00:19:17.000
particular connection what if you don't
own your own IP addresses they just come
from your isp that's no problem at all

188
00:19:17.000 --> 00:19:24.000
we are happy to provide you with a / 31
of public IP addresses to use on a
public virtual interface all you need to

189
00:19:24.000 --> 00:19:30.000
do is raise a support case and ask us to
provide that to you and then finally
what if you want to change the bandwidth

190
00:19:30.000 --> 00:19:36.000
from one of those hosted connect
the 50 through 500 Meg connections via
direct connect partners what what you

191
00:19:36.000 --> 00:19:41.000
need to do there is go back to the
partner and actually ask them to create
you a new hosted connection at the new

192
00:19:41.000 --> 00:19:47.000
bandwidth they can do this in parallel
to your existing one it's on another
VLAN you can configure another virtual

193
00:19:47.000 --> 00:19:53.000
interface and attach it to your VPC and
then you can simply remove the old one
there is no need for downtime in this

194
00:19:53.000 --> 00:20:02.000
situation you can simply create a new
one then D provision the old one how
does billing work on Direct Connect well

195
00:20:02.000 --> 00:20:08.000
quite similarly to the to the VPN side
of things we charge for the hours that
you have a direct connect connection and

196
00:20:08.000 --> 00:20:13.000
it's charged from the moment that it
comes up for the first time so obviously
there is quite often a period of time

197
00:20:13.000 --> 00:20:18.000
from when you order the connection from
AWS so the point of time at which your
carrier your partner can actually

198
00:20:18.000 --> 00:20:23.000
deliver it to your facilities so in that
window we don't charge for that
connection when it comes up for the

199
00:20:23.000 --> 00:20:29.000
first time that's when we start the
billing process over direct connect you
have reduced data transfer rate so you

200
00:20:29.000 --> 00:20:35.000
pay for data transfer and it's worth
remembering as I said earlier that if
you're running an ipsec VPN over that

201
00:20:35.000 --> 00:20:41.000
direct connect public virtual interface
you pay for the data transfer at the
direct connect rates now if you have a

202
00:20:41.000 --> 00:20:47.000
private virtual interface billing for
this is very simple all the data
transfer that goes out via your virtual

203
00:20:47.000 --> 00:20:53.000
private gateway over direct connect is
charged for at the direct connect rates
what about a public virtual interface

204
00:20:53.000 --> 00:20:58.000
because a public virtual interface is
giving you access to all of the things
on public IP addresses all of the

205
00:20:58.000 --> 00:21:03.000
services that we have other services
that other customers are publishing on
AWS you can access all of those over

206
00:21:03.000 --> 00:21:09.000
public virtual interfaces so how is that
build well first of all let's keep it
really simple if you're accessing a

207
00:21:09.000 --> 00:21:14.000
resource that you own let's say an s3
bucket then it's quite simple you pay
for that data transfer and it's charged

208
00:21:14.000 --> 00:21:22.000
for at the direct connect rates what
about accessing a resource that is owned
by another account but it's part of your

209
00:21:22.000 --> 00:21:27.000
consolidated billing family so many of
you might have multiple AWS accounts
that will come into one consolidated

210
00:21:27.000 --> 00:21:33.000
bill if you're accessing an s3 bucket
that is owned by another AWS account but
within that same consolidated billing

211
00:21:33.000 --> 00:21:39.000
family again you'll pay for that and
you'll pay for other deck direct connect
rates what about if you're accessing

212
00:21:39.000 --> 00:21:44.000
something that I own something that
another customer on AWS is providing
from the platform

213
00:21:44.000 --> 00:21:52.000
and in that case you don't pay for that
data transfer they pay for that data
transfer so some of you might have seen

214
00:21:52.000 --> 00:21:59.000
the announcement earlier today we
announced that we now support ipv6 in
VPC we launched in the Ohio region this

215
00:21:59.000 --> 00:22:05.000
morning and therefore we also support
now ipv6 on Direct Connect so I wanted
to give you a bit of an insight into how

216
00:22:05.000 --> 00:22:15.000
that's actually going to be working so
when you create an ipv6 based peering
session on a virtual interface we're

217
00:22:15.000 --> 00:22:21.000
going to be supplying you with a slash
125 side a block for that particular
connection you won't be defining your

218
00:22:21.000 --> 00:22:26.000
own ipv6 addresses for the connection if
you haven't seen it also within VPC
again will be assigning you address

219
00:22:26.000 --> 00:22:35.000
space from Amazon's ipv6 allocation we
will accept / 64 or shorter prefixes
from you over the BGP session and the

220
00:22:35.000 --> 00:22:41.000
way this works is it's actually an
additional peering session on top of
your existing virtual interface so

221
00:22:41.000 --> 00:22:47.000
you'll have an ipv4 peering session and
ipv6 peering session and it is supported
on both public and private virtual

222
00:22:47.000 --> 00:22:55.000
interfaces so this is what it looks like
on the screen here I'm showing you an
existing virtual interface it's down at

223
00:22:55.000 --> 00:23:00.000
this point I'm finished configuring a
double but what we going to do at the
top here is click on the Actions menu

224
00:23:00.000 --> 00:23:05.000
and you'll see there is now an option to
add appearing to this virtual interface
until this point it's only an ipv4

225
00:23:05.000 --> 00:23:13.000
connection which is now up and running
but i want to add ipv6 to it so we add
appearing we choose ipv6 now you can

226
00:23:13.000 --> 00:23:20.000
only have a pair of peering connections
on this virtual interface one ipv4 one
ipv6 so in this case because ipv4

227
00:23:20.000 --> 00:23:27.000
already exists this is going to be an
additional ipv6 interface also generate
IPS as i mentioned we're going to

228
00:23:27.000 --> 00:23:33.000
provide the IP addresses for the peering
session itself you simply specify the AS
number and if you want to specify one

229
00:23:33.000 --> 00:23:39.000
the BGP key that you're going to use for
this session and then click go you'll
then see an additional tab appears on

230
00:23:39.000 --> 00:23:50.000
that virtual interface showing you both
the ipv4 and the ipv6 sessions
you can of course go back and if you

231
00:23:50.000 --> 00:23:57.000
started with an ipv6 peering session add
an ipv4 session to it so it works both
ways you could start with either peering

232
00:23:57.000 --> 00:24:04.000
and add the second peering afterwards so
I mentioned BGP a few times so a quick
refresher on that because we're going to

233
00:24:04.000 --> 00:24:12.000
have to dive in some of the detail of
this next so BGP is a TCP based protocol
for exchanging routing information more

234
00:24:12.000 --> 00:24:19.000
specific prefixes or roots have always
preferred we use autonomous system
numbers to identify the networks on each

235
00:24:19.000 --> 00:24:27.000
end of a BGP session and that session is
established between two BGP neighbors
ibgp is the term that's used for bgp

236
00:24:27.000 --> 00:24:33.000
peers within the same is number ebgp is
the term used for peers within different
asses and whenever you're doing BGP with

237
00:24:33.000 --> 00:24:39.000
AWS you're going to be using ebgp so
there's going to be two different a/s
numbers on the ends of the VPN

238
00:24:39.000 --> 00:24:46.000
connection or the direct connect is path
is a really important concept it's a
measure of network distance so it's not

239
00:24:46.000 --> 00:24:51.000
the same as a traceroute with the amount
of hops in it but it represents the
whole network that you're passing

240
00:24:51.000 --> 00:24:57.000
traffic through and on the a s path it
will not be identified by a number of
the particular networks that your

241
00:24:57.000 --> 00:25:01.000
traffic is passing through you can
always configure a local preference to
push traffic down a particular

242
00:25:01.000 --> 00:25:11.000
connection if needed so a bit more on a
s numbers autonomous system numbers if
you look up amazon in one of the

243
00:25:11.000 --> 00:25:18.000
Internet routing registries you're
probably going to see the RAS number is
160 509 it's a few others out there as

244
00:25:18.000 --> 00:25:23.000
well but that's our main a s number but
when you create a public virtual
interface and you download that

245
00:25:23.000 --> 00:25:28.000
configuration remembering it gives you
access to all of Amazon's public ip's in
that region you're actually going to see

246
00:25:28.000 --> 00:25:36.000
that the a s number is probably 7224
it's not 165 09 what about when you
create a private virtual interface

247
00:25:36.000 --> 00:25:43.000
what's the a s number we use on the
Amazon end of a private virtual
interface all our dynamic VPN and the

248
00:25:43.000 --> 00:25:49.000
point here is that it can vary so please
don't make any assumptions about what
the a s number is going to be as an

249
00:25:49.000 --> 00:25:57.000
example here's some of our region's just
specifying what the a s numbers are so
always download the configuration you

250
00:25:57.000 --> 00:26:01.000
can do this in a couple of ways so if
you create a virtual interface there's
always a link to down

251
00:26:01.000 --> 00:26:07.000
the configuration within that will be
the a s number that we're using for that
particular connection in that region the

252
00:26:07.000 --> 00:26:13.000
same for a VPN connection and obviously
you can also do this via the command
line tools so always check what the a s

253
00:26:13.000 --> 00:26:21.000
number is on the Amazon end of your VPN
or direct connect connection now that
public virtual interface that gives us

254
00:26:21.000 --> 00:26:27.000
access to all of Amazon's public IPS in
that particular region it requires
public IP addresses for the BGP peering

255
00:26:27.000 --> 00:26:33.000
session as I mentioned you can open a
case with a double your support if you
need a / 31 to use for that but if you

256
00:26:33.000 --> 00:26:38.000
have your own IP addresses you can
announce those to us when you create the
virtual interface you specify those IP

257
00:26:38.000 --> 00:26:43.000
addresses we then whitelist them to
accept them into our network once we
verified that you own them and then you

258
00:26:43.000 --> 00:26:52.000
can use those if you're going to use an
AS number that is public you have to own
that a s number on a public virtual

259
00:26:52.000 --> 00:26:58.000
interface if you don't that's absolutely
fine you can use private a s numbers but
if you specify a public one again we're

260
00:26:58.000 --> 00:27:03.000
going to verify that you actually own
that before we enable that virtual
interface and that's why there's a

261
00:27:03.000 --> 00:27:10.000
window of time up to about 72 hours
possibly to validate the ownership of
those IP addresses and that a s number

262
00:27:10.000 --> 00:27:18.000
public virtual interfaces in the u.s.
also enable you to reach all of the AWS
regions within the US this is us

263
00:27:18.000 --> 00:27:23.000
specific feature but it means that
you're going to receive BGP
announcements for all of Amazon's IPS in

264
00:27:23.000 --> 00:27:33.000
all of the AWS regions in the u.s. now
going back to the a s path comment I
made earlier this is an example of the

265
00:27:33.000 --> 00:27:40.000
output for a particular prefix on a root
of that is connected over a BGP session
via a public virtual interface you can

266
00:27:40.000 --> 00:27:48.000
see on here that there's an AS path 722
for is the AAS paas number i mentioned
that we use for direct connect you can

267
00:27:48.000 --> 00:27:54.000
see it twice in the path there you also
see that we then have 165 09 which is
the amazon is number i also mentioned

268
00:27:54.000 --> 00:28:02.000
earlier and represents where this
particular prefix originates within our
network what you've got here is an AS

269
00:28:02.000 --> 00:28:09.000
path length of three so we have 7 2 24
in there twice deliberately one step
further than that we actually have

270
00:28:09.000 --> 00:28:14.000
what's called a community attached to
this particular BGP announcement it's
called a no export community

271
00:28:14.000 --> 00:28:22.000
and the reason we've done that is it
helps prevent any unintended propagation
of these roots beyond your a s bandry so

272
00:28:22.000 --> 00:28:28.000
beyond your network you can of course
over I things like no export if you
happen to use multiple is numbers

273
00:28:28.000 --> 00:28:33.000
internally but this is a measure to help
prevent these roots being leaked beyond
your network and limit the impact if

274
00:28:33.000 --> 00:28:44.000
that were to happen as I mentioned you
can have an inter-regional interface
this is enabled by default which means

275
00:28:44.000 --> 00:28:49.000
you're going to receive all of these
prefixes for all of those regions in the
US but if you don't actually want to use

276
00:28:49.000 --> 00:28:56.000
them what we do here is we actually
tagged our announcements with particular
BGP communities to help you decide what

277
00:28:56.000 --> 00:29:01.000
you want to do with them so you can see
here that if it comes from the local AWS
region you connected this virtual

278
00:29:01.000 --> 00:29:08.000
interface to it's going to be tagged
with the 8100 community if however it
comes from somewhere else on the

279
00:29:08.000 --> 00:29:15.000
continents are somewhere else within the
US then it will be tagged with the
80-200 prefix equally you can announce

280
00:29:15.000 --> 00:29:21.000
prefixes back to us and tag them with a
particular community to limit how far we
distribute those within our network so

281
00:29:21.000 --> 00:29:26.000
if you only want your public IP
addresses to be routed from within that
local region that's fine you just add

282
00:29:26.000 --> 00:29:34.000
the 9100 community to those
announcements so here's an example of
those communities attached to this

283
00:29:34.000 --> 00:29:40.000
particular announcement you can see
we've got seven two to four eighty 180
200 well obviously a region is within

284
00:29:40.000 --> 00:29:47.000
the continent so that's why you've got
both communities attached to this
particular announcement so a few more

285
00:29:47.000 --> 00:29:53.000
considerations around the a s path that
we should think about when we're doing
multi region deployments on AWS so

286
00:29:53.000 --> 00:29:59.000
here's the scenario that we're going to
be working with we have 3 V pcs in three
different regions one in u.s. East one

287
00:29:59.000 --> 00:30:06.000
in North Virginia one in u.s. west to
and Oregon and one in EU west one which
is in Ireland you can see just under the

288
00:30:06.000 --> 00:30:11.000
VPC there I've put the a s numbers that
we use for the private virtual interface
in those particular regions and you

289
00:30:11.000 --> 00:30:19.000
might notice that the EU s one island
region uses a different is number used
is 90 59 all of these are connected to a

290
00:30:19.000 --> 00:30:25.000
corporate backbone might be your own
backbone it might be managed and
provided to you by a partner but I'm

291
00:30:25.000 --> 00:30:32.000
representing that here by a particular a
s number sixty five thousand
so let's take the scenario where we want

292
00:30:32.000 --> 00:30:38.000
to be able to send traffic across this
corporate backbone for whatever reason
that you have between us East one and us

293
00:30:38.000 --> 00:30:45.000
west to both of them used the same is
number seven two to four and in the BGP
environment what that actually means is

294
00:30:45.000 --> 00:30:53.000
when you announce that route from us
east on the left across your corporate
network where we add then the 65,000 a s

295
00:30:53.000 --> 00:30:59.000
number to the a s path when it gets to
us west too we're actually going to
reject it and that's because to us it

296
00:30:59.000 --> 00:31:05.000
appears to come from the same a s number
and it could cause a routing loop so on
outside we're going to reject that

297
00:31:05.000 --> 00:31:09.000
announcement from your Rooter but
actually you wanted this to happen you
want it to be able to communicate

298
00:31:09.000 --> 00:31:16.000
between those two V pcs so how can we
fix that will use an example here for a
cisco router you can apply something

299
00:31:16.000 --> 00:31:24.000
called a s override on your route of
facing that region what that means is if
i see the a s number in the a s path for

300
00:31:24.000 --> 00:31:30.000
the network that i'm about to announce
the network to i'm going to override
that i'm going to replace it with my a s

301
00:31:30.000 --> 00:31:36.000
number so you can see here in green the
65,000 that's the backbone is number at
which point we will happily accept that

302
00:31:36.000 --> 00:31:43.000
announcement into the u.s. west region
now obviously if you do the same for the
reverse path this time from us west to

303
00:31:43.000 --> 00:31:49.000
back to us East one the same is going to
apply so let's put a s override in place
to deal with that now you may not have

304
00:31:49.000 --> 00:31:53.000
to configure this on your own equipment
but it might be something that your
partner your carrier may have to do

305
00:31:53.000 --> 00:32:01.000
let's take another scenario using that
same environment this time we've got EU
west one in Ireland wanting to be able

306
00:32:01.000 --> 00:32:09.000
to send traffic to us west to well in
this case EU west one is using a
different a s number 90 59 so if we look

307
00:32:09.000 --> 00:32:16.000
at this path here in the middle we can
see 65,000 90 59 everything's good we
announce that to us west to which is

308
00:32:16.000 --> 00:32:26.000
7224 it's accepted no problem there's no
routing loop as far as bgp is concerned
let's do it the other way round us west

309
00:32:26.000 --> 00:32:35.000
to announces from 7224 via the backbone
65,000 into EU west one nao EU s 1 is 9
at 59 so everything should be good but

310
00:32:35.000 --> 00:32:42.000
if you actually set this up you'll find
that it is rejected why is that
well it's because internally we actually

311
00:32:42.000 --> 00:32:48.000
use 7224 for quite a few of the internal
environments for direct connect so what
do we do in this particular situation

312
00:32:48.000 --> 00:32:56.000
well you could try and apply is over I'd
like we did before you can see here in
the example actually won't do anything

313
00:32:56.000 --> 00:33:04.000
because the peering session is with 90
59 that's not the same as 72 to force OS
override does not apply so it's still

314
00:33:04.000 --> 00:33:10.000
rejected now there's a few variations of
how you can deal with this situation
this is BGP engineering that you can do

315
00:33:10.000 --> 00:33:16.000
one example I wanted to use here with
you can actually change the way you're
announcing routes into the EU west one

316
00:33:16.000 --> 00:33:24.000
region you can actually configure your
route to the last hop before the VPC to
originate a default route so this time

317
00:33:24.000 --> 00:33:30.000
this route this 0 / 0 route is going to
originate from your 65,000 network and
of course we're going to accept that

318
00:33:30.000 --> 00:33:36.000
because there is no routing loop there's
no 7224 there's no 90 59 this probably
isn't quite what you wanted to achieve

319
00:33:36.000 --> 00:33:43.000
you didn't want a default route you just
wanted to route to the other v pcs
across the globe so now let's look a

320
00:33:43.000 --> 00:33:49.000
little bit more about how the virtual
gateway works with this so here's our VP
see we've got our BGP session with our

321
00:33:49.000 --> 00:33:55.000
default route being originated on the
right-hand side so now the Virtual
Private gateway has a default route

322
00:33:55.000 --> 00:34:02.000
inside but your VPC probably also has an
Internet gateway which also routes out
to the internet it's probably what you

323
00:34:02.000 --> 00:34:08.000
intended to use as your default route
well the good news here is that those
two options are actually separate from

324
00:34:08.000 --> 00:34:14.000
the route tables inside your VPC when
you create a route table it has a local
route in it which says this is how I get

325
00:34:14.000 --> 00:34:21.000
to all the IP addresses within my VPC
you've then probably created a default
route that says send all traffic to the

326
00:34:21.000 --> 00:34:28.000
internet via my internet gateway what
you can actually do here is put a
specific route in that route table

327
00:34:28.000 --> 00:34:37.000
inside your VPC just for the 10 / 8
network and in this case you can say if
I have traffic for 10 / 8 send it to the

328
00:34:37.000 --> 00:34:42.000
virtual private gateway so what you're
seeing here is two steps in the routing
process there's a decision that's made

329
00:34:42.000 --> 00:34:47.000
inside the route table that you
configured and then once that traffic
gets to your virtual private gateway

330
00:34:47.000 --> 00:34:53.000
it's going to follow that default route
anyway down the direct connect on to the
corporate backbone so you have actually

331
00:34:53.000 --> 00:34:57.000
achieved you
goal of being able to route to the rest
of your 10 network / direct connect even

332
00:34:57.000 --> 00:35:05.000
though you might have some overlapping
AAS number configuration issues so while
we're talking about routing within our

333
00:35:05.000 --> 00:35:10.000
VPC we might have multiple routes to get
to a particular destination inside that
route table they could have come from

334
00:35:10.000 --> 00:35:15.000
various places you could have created
them manually they could have been
propagated dynamically from direct

335
00:35:15.000 --> 00:35:21.000
connect to VPN so how do we make a
decision about where to send that
traffic well the first thing to say is

336
00:35:21.000 --> 00:35:27.000
that local routes within the VPC always
come first you cannot create a more
specific route in a route table in a VPC

337
00:35:27.000 --> 00:35:35.000
than the VPC cider itself assuming that
the choice now has to be made between
two routes that are outside of that VPC

338
00:35:35.000 --> 00:35:42.000
the first thing we're going to do is
look for the longest prefix match first
so a / 24 is more specific than a / 16

339
00:35:42.000 --> 00:35:48.000
route assuming that hasn't broken the
tie we're then going to have a look and
say any route that appeared as a static

340
00:35:48.000 --> 00:35:56.000
entry one that you created inside that
route table that will win okay but
perhaps that didn't split the match we

341
00:35:56.000 --> 00:36:02.000
have here so now we're into the dynamic
routes if we have a dynamic route via
direct connect and via VPN the first

342
00:36:02.000 --> 00:36:08.000
thing we're going to do is choose direct
connect it's unlikely that you intended
to use a VPN connection if you had a

343
00:36:08.000 --> 00:36:14.000
direct connect in place so direct
connect wins first if we still need to
break a tie here we're going to look at

344
00:36:14.000 --> 00:36:20.000
the shortest is path and finally at this
stage we say okay we have to book two
paths to a remote network we're going to

345
00:36:20.000 --> 00:36:27.000
do ecmp equal cost multipathing and use
both of those connections assuming it
wasn't a direct connect decision we

346
00:36:27.000 --> 00:36:34.000
needed to make static VPN connections
now come before dynamic VPN connections
so this is the routing preference that

347
00:36:34.000 --> 00:36:42.000
we have with inside the VPC so now let's
talk about something called VPN cloud
hub you might have seen this in the

348
00:36:42.000 --> 00:36:48.000
documentation VPN cloud hub is a way
that you can connect multiple remote
networks these could be your data

349
00:36:48.000 --> 00:36:54.000
centers your corporate offices all into
the same virtual private gateway
assuming you configure them with

350
00:36:54.000 --> 00:36:59.000
different a/s numbers here you'll need
the exchanging routes via the virtual
private gateway it acts as a hub hence

351
00:36:59.000 --> 00:37:07.000
the name cloud hub it also of course
gives you accessing to the VPC as you'd
expect you can use different a/s numbers

352
00:37:07.000 --> 00:37:10.000
but you also
have the oxygen to use the same AS
number if you wanted to although you

353
00:37:10.000 --> 00:37:16.000
might need to do some custom
configuration on your reuters to make
that work i also wanted to show an

354
00:37:16.000 --> 00:37:21.000
example here where instead of connecting
multiple offices or multiple data
centers together you could of course

355
00:37:21.000 --> 00:37:28.000
deploy another VPC perhaps in a
different region so up on the top right
i'm showing EU central one this is

356
00:37:28.000 --> 00:37:34.000
another region I've deployed to software
VPN instances in that region are
deployed to obviously for high

357
00:37:34.000 --> 00:37:40.000
availability so these are now my
customer gateways they connect to the
virtual private gateway on the left and

358
00:37:40.000 --> 00:37:47.000
now we're able to route between your
data centers and two different pcs in
two different locations that works

359
00:37:47.000 --> 00:37:54.000
really well you can expand that of
course and now put another to software
VPN instances in another VPC build a

360
00:37:54.000 --> 00:37:59.000
whole set of VPN to that virtual private
gateway and now all three of these V pcs
wherever they're located will be able to

361
00:37:59.000 --> 00:38:05.000
route to each other let's add a
corporate data center back into the mix
here let's add a private virtual

362
00:38:05.000 --> 00:38:11.000
interface connected to that same virtual
private gateway and now all of these
environments can all route to each other

363
00:38:11.000 --> 00:38:17.000
so you can come over one direct connect
into one particular region then over
these VPN connections out to the others

364
00:38:17.000 --> 00:38:24.000
isn't this starting to sound like a
transit VPC you've created an
environment where you can route to

365
00:38:24.000 --> 00:38:30.000
multiple locations over this one
connection but there's a problem with
this design whilst technically it works

366
00:38:30.000 --> 00:38:38.000
we've had to deploy to software VPN
instances in every single VPC that we
want to add into this environment those

367
00:38:38.000 --> 00:38:43.000
two software VPNs might be running
commercial software you're having to pay
license fees for and you don't need to

368
00:38:43.000 --> 00:38:48.000
deal with the resilience of them within
that VP see what happens when one of
them fails that's what we should always

369
00:38:48.000 --> 00:38:53.000
be planning for so we now need to have
some automation that fails over our
routing all of this is completely doable

370
00:38:53.000 --> 00:39:02.000
and we actually have examples of this
published but actually there's an easier
way we published a transit VPC solution

371
00:39:02.000 --> 00:39:09.000
recently what this does is it moves
those two software VPN instances into a
hub environment so we actually create a

372
00:39:09.000 --> 00:39:17.000
VPC here we're not using anything else
within it just to hold these to VPN
instances these to VPN instances act as

373
00:39:17.000 --> 00:39:23.000
the customer gateway and they connect
out to the virtual private gateway
the other VP sees as you need because

374
00:39:23.000 --> 00:39:28.000
it's going to a virtual private gateway
on the other end you haven't even got to
think about the resilience within those

375
00:39:28.000 --> 00:39:34.000
VP sees a and B at the top because you
have one target in your route table the
virtual private gateway you don't have

376
00:39:34.000 --> 00:39:40.000
to script any failover you just say
semi-tractor the virtual private gateway
and we take care of it for you in the

377
00:39:40.000 --> 00:39:45.000
hub we have the to VPN instances so
that's highly available in resilient if
one of those fails all of the traffic

378
00:39:45.000 --> 00:39:51.000
will just keep flowing over the other
one whilst it gets replaced by whatever
automation you want to implement now

379
00:39:51.000 --> 00:39:56.000
we've actually published a
CloudFormation template and automation
around this for you it allows you to do

380
00:39:56.000 --> 00:40:03.000
things as simple as tagging a virtual
private gateway with a spoke tag we then
use lambda to automatically notice that

381
00:40:03.000 --> 00:40:09.000
build a VPN configuration and configure
these two software VPN instances in the
middle for you so you can go and

382
00:40:09.000 --> 00:40:15.000
download that from our website give it a
try customize it as much as you need and
that's great for connecting V pcs

383
00:40:15.000 --> 00:40:22.000
together in multiple regions if needed
but also you probably want to connect it
back to your data center so at the

384
00:40:22.000 --> 00:40:27.000
bottom here if you were using a VPN
connection you could bring those
straight into those two ec2 instances in

385
00:40:27.000 --> 00:40:32.000
the middle but if you're using direct
connect how does that work well you can
actually create a virtual private

386
00:40:32.000 --> 00:40:38.000
gateway doesn't hatch just have to even
be attached to a VPC you can bring your
virtual interface for direct connect

387
00:40:38.000 --> 00:40:46.000
into that and then tag it again with the
spoke VPN tag that will then add it into
this transit VPC and now you'll be able

388
00:40:46.000 --> 00:40:52.000
to route between direct connects and all
of those other v pcs at the top of the
diagram so as I say there is a full

389
00:40:52.000 --> 00:40:57.000
solution brief documented about this it
shows you how to configure all of the
components how to automatically deploy

390
00:40:57.000 --> 00:41:04.000
it and I'd encourage you to take a look
at that and customize it for your own
needs so how do we use VPN and direct

391
00:41:04.000 --> 00:41:12.000
connect with some other AWS services
let's touch on public virtual interfaces
first it connects you to those public

392
00:41:12.000 --> 00:41:20.000
services we talked about anything within
that local associated region and things
like Amazon s3 Amazon glacier DynamoDB

393
00:41:20.000 --> 00:41:27.000
these are the kinds of services that
you're going to connect to over a public
virtual interface what about these

394
00:41:27.000 --> 00:41:33.000
services these might be ones that you're
considering actually all these private
well know all of these actually have a

395
00:41:33.000 --> 00:41:38.000
public component to them were
spaces you connect to the endpoints for
work spaces over the internet so they

396
00:41:38.000 --> 00:41:45.000
have public IP addresses elastic load
balancing yes you can have internal
elastic load balancers but you also

397
00:41:45.000 --> 00:41:50.000
generally deploy them with public IP
addresses facing the Internet so these
are all reachable over a public virtual

398
00:41:50.000 --> 00:41:57.000
interface now what about a private
virtual interface it goes to your VPC so
I think we can keep those same services

399
00:41:57.000 --> 00:42:02.000
on the screen because workspaces has a
component that does exist inside your
PPC as well so it's relevant for that

400
00:42:02.000 --> 00:42:10.000
lambda again you can create lambda
functions and run them inside your VPC
so that's relevant and of course ec2 ec2

401
00:42:10.000 --> 00:42:17.000
instances are running inside your VP see
other services though that you might not
expect to see there you've got things

402
00:42:17.000 --> 00:42:24.000
like RDS redshift cloud HSN these all
reachable over private virtual
interfaces so let's take an actual

403
00:42:24.000 --> 00:42:29.000
example here let's work with Storage
Gateway for those of you not familiar
with Storage Gateway it's a virtual

404
00:42:29.000 --> 00:42:36.000
appliance that you deploy in your
virtualized environment on-premises you
can then use your legacy servers and

405
00:42:36.000 --> 00:42:42.000
backup software that supports virtual
tape libraries to connect to the storage
gateway over I scalzi well stories

406
00:42:42.000 --> 00:42:48.000
gateway then does is it can either act
in a cache mode or a gateway mode but it
will then take your data and push it

407
00:42:48.000 --> 00:42:56.000
into a service on the AWS side via some
public endpoints so these exist for a
particular region they have public IP

408
00:42:56.000 --> 00:43:01.000
addresses this normally works over the
internet so I think you can see quite
clearly here if we put a direct connect

409
00:43:01.000 --> 00:43:07.000
in place you could replace that
connection over the Internet potentially
high bandwidth usage that's going over

410
00:43:07.000 --> 00:43:14.000
your current internet connection you
could replace that with a direct connect
the other scenario is amazon workspaces

411
00:43:14.000 --> 00:43:20.000
so again this might be an architecture
that you've seen before it's quite a
standard setup of workspaces on the left

412
00:43:20.000 --> 00:43:26.000
hand side we have your data center we
have various servers deployed within
that environment perhaps some directory

413
00:43:26.000 --> 00:43:31.000
servers multi-factor authentication
servers you also have your users within
that environment who want to connect to

414
00:43:31.000 --> 00:43:36.000
their workspaces and when they connect
to the endpoints for work spaces they go
over the internet they're exposed to the

415
00:43:36.000 --> 00:43:42.000
public Internet so you can log in from
anywhere there's usually already a VPN
connection within a solution like this

416
00:43:42.000 --> 00:43:48.000
because our directory service wants to
integrate with your directory so that
VPN can

417
00:43:48.000 --> 00:43:54.000
is in place and as we know a private
virtual interface can be used wherever
we're using a VPN connection so that's

418
00:43:54.000 --> 00:44:00.000
one place in this solution that we can
use direct connect but there is one more
those connections from those users when

419
00:44:00.000 --> 00:44:06.000
they're in the corporate office within
the corporate environment if they want
to reach these public endpoints if we

420
00:44:06.000 --> 00:44:11.000
put a public virtual interface in place
they can actually connect over those we
aren't limiting their ability to connect

421
00:44:11.000 --> 00:44:17.000
you can still connect from home or from
a coffee shop wherever you need to tease
workspaces but if you're in the office

422
00:44:17.000 --> 00:44:26.000
you can benefit from that direct connect
connection if you deploy a public
virtual interface okay so I sometimes

423
00:44:26.000 --> 00:44:32.000
hear the requesting customers that they
want to use direct connect but it's not
encrypted how can i encrypted connection

424
00:44:32.000 --> 00:44:39.000
over direct connect well this is one of
the options for doing that there are
many ways of doing it and I showed this

425
00:44:39.000 --> 00:44:44.000
example last year it's a very high level
diagram it's saying that on the right
hand side we have your corporate network

426
00:44:44.000 --> 00:44:49.000
we have a Rueter there we create a
public virtual interface which is the
blue line on the diagram here the

427
00:44:49.000 --> 00:44:55.000
configuration at the top everything
we've talked about so far because the IP
addresses for our VPN endpoints are

428
00:44:55.000 --> 00:45:01.000
presented within that public address
space you can now build a VPN connection
on top of that that's the 2 dashed green

429
00:45:01.000 --> 00:45:06.000
lines on the diagram here the
configuration for those two IPSec
tunnels is shown at the bottom of the

430
00:45:06.000 --> 00:45:13.000
screen and this is what you'd need to
configure but how do you actually do
this so what I'm going to show you is

431
00:45:13.000 --> 00:45:20.000
one particular example it's configured
on a cisco router you can do this on
various vendors hardware and it uses

432
00:45:20.000 --> 00:45:26.000
something called virtual routing and
forwarding vrf so vrf allows you to
create a separate environment within

433
00:45:26.000 --> 00:45:31.000
that router it's sometimes called a
routing instance on other vendors
environments the vendors hardware you

434
00:45:31.000 --> 00:45:37.000
can create a separate routing table
within that Rueter it means that the
main route table can be associated with

435
00:45:37.000 --> 00:45:45.000
an internal private network and you can
contain a set of other routes completely
separately to that route table so what

436
00:45:45.000 --> 00:45:51.000
we have here I've created a vrf virtual
routing and forwarding environment for a
public virtual interface I'm then going

437
00:45:51.000 --> 00:45:57.000
to build that public virtual interface
between AWS and that vrf now when you
create a public virtual interface you

438
00:45:57.000 --> 00:46:03.000
download a configuration it looks
something like this but
done here is added in the extra lines to

439
00:46:03.000 --> 00:46:10.000
now use a vrf on this particular router
so these examples can actually be used
and applied if you want to there's a few

440
00:46:10.000 --> 00:46:15.000
other elements you might choose to add
to integrate better with your network to
add some additional security but these

441
00:46:15.000 --> 00:46:22.000
are the core components once you've
configured the vrf for that public
virtual interface if we now look inside

442
00:46:22.000 --> 00:46:29.000
that route table inside the vrf we're
going to see all of those amazon public
IP addresses within those are the IP

443
00:46:29.000 --> 00:46:35.000
addresses for the virtual private
gateway so the next step is to create a
VPN connection and again when you

444
00:46:35.000 --> 00:46:42.000
download the configuration this is what
it's going to look like what you can do
here is say when I establish this VPN

445
00:46:42.000 --> 00:46:48.000
connection establish it from within that
vrf use the routing that I have
available from that public virtual

446
00:46:48.000 --> 00:46:54.000
interface to reach the VPN endpoints so
I'm showing you here the places that you
need to add in that additional

447
00:46:54.000 --> 00:46:58.000
configuration for your reference that
you can use this perhaps after this
session to try out this configuration

448
00:46:58.000 --> 00:47:07.000
basically though you're configuring the
key rings and the profile for the VPN
connection once you've configured those

449
00:47:07.000 --> 00:47:11.000
two elements though you also have to
take the two tunnel interfaces
themselves and here it's really

450
00:47:11.000 --> 00:47:17.000
important to configure those tunnels to
start within that vrf we don't need the
whole interface to be in there so

451
00:47:17.000 --> 00:47:24.000
there's no configuration here to put the
interface itself in the vrf just the
start of the tunnels so when that's done

452
00:47:24.000 --> 00:47:30.000
what we now have is the configuration of
two tunnels that have part of them
inside that public vrf and part of them

453
00:47:30.000 --> 00:47:36.000
within the global routing table on the
router we bring up the bgp sessions
between these two and now if we have a

454
00:47:36.000 --> 00:47:42.000
look at the route table on the main part
of the route of the global routing table
it's nice and clean all it has in it is

455
00:47:42.000 --> 00:47:53.000
a route to my corporate network 192 168
51 in this example and it has my two
parts by to VPN connections in to AWS so

456
00:47:53.000 --> 00:48:01.000
this is one way that you can build an
encrypted connection on top of direct
connect

457
00:48:01.000 --> 00:48:06.000
so these are a few of the other sessions
that cover direct connect and VPNs
there's quite a few there as I say most

458
00:48:06.000 --> 00:48:12.000
of them have already occurred this week
so you can catch them on YouTube after
the event hope the session has been

459
00:48:12.000 --> 00:48:17.000
useful to you we'd really appreciate
your feedback because I shape this
session based on some of the feedback we

460
00:48:17.000 --> 00:48:22.000
had last year and we're always looking
to improve the content so thank you very
much for your time got about 10 minutes
if anyone's got any questions